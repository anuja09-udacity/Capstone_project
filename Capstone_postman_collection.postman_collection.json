{
	"info": {
		"_postman_id": "18f1ae05-04a8-482d-bde0-4aa8a0d0514e",
		"name": "Capstone_postman_collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29100158"
	},
	"item": [
		{
			"name": "Casting Assistant",
			"item": [
				{
					"name": "GET/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains movies array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.movies).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains actors array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actors).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since no credentials are present\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/add",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since no credentials are present\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/add",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since no credentials are present\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/update/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"update",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since no credentials are present\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/update/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"update",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since no credentials are present\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/delete/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"delete",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since no credentials are present\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/delete/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"delete",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkdtOXJGLUNjNk1zVjlBRUpUM0tBUyJ9.eyJpc3MiOiJodHRwczovL2FudWphZnNuZC11ZGFjaXR5LnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw2NTEwMDZhMjZlYTgyNWVmNGY1ZmFiNjYiLCJhdWQiOiJDYXN0aW5nQWdlbmN5IiwiaWF0IjoxNjk1NTc2MTQxLCJleHAiOjE2OTU1ODMzNDEsImF6cCI6ImdjMTU2eWtzOVFGSWNYZVc2OFA5SkpuMER4azlEd3V3Iiwic2NvcGUiOiIiLCJwZXJtaXNzaW9ucyI6WyJ2aWV3OmFjdG9ycyIsInZpZXc6bW92aWVzIl19.QXN0eDmrN6hj8Pkow1DEqRttggnBAdw1139FKY-Ihyy3OisG8nDYC-JatYjc_qr6qHSq8xBIbdC3qASne59MDIEGx2_tvBsXyxGCR7huYIvU-XBgf6M0TwtJu5sXMBaSWz6f_qnzBUSg44jiMQQUX8zTm7ZYZoqS7-ujXHFVfBU5WnHEq_ndzB-uWegrN8DenOCl1mTA6clsY1D6Ux8Wxvc1seq2tY4OQrMlMyrYQNH_dzT1G8uVHW_MBO7Jf2XYhFrGi_vSY7BX0vtzlZzoVDQUHVdQzBXLXdAfJla0t45_DTkSkcxyMTKIDVoO_Vj4j6ySV2CYqGDnmcH8bcRjsQ",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Casting Director",
			"item": [
				{
					"name": "GET/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains movies array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.movies).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains actors array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actors).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since no credentials are present\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/add",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Test Actor\", \"gender\": \"Male\", \"age\": \"30\", \"movie_id\": \"4\"}"
						},
						"url": {
							"raw": "{{host}}/actors/add",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH/movies/3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"title\": \"Healer\",\"release_year\": \"2020\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/movies/update/3",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"update",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH/actors/ 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"age\": \"26\"}"
						},
						"url": {
							"raw": "{{host}}/actors/update/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"update",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE/movies/17",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since no credentials are present\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/delete/17",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"delete",
								"17"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE/actors/8",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/delete/8",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"delete",
								"8"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkdtOXJGLUNjNk1zVjlBRUpUM0tBUyJ9.eyJpc3MiOiJodHRwczovL2FudWphZnNuZC11ZGFjaXR5LnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw2NTEwMDZkOTcwZDNjZmU3ZWM4MmMxZGEiLCJhdWQiOiJDYXN0aW5nQWdlbmN5IiwiaWF0IjoxNjk1NTc4OTUyLCJleHAiOjE2OTU1ODYxNTIsImF6cCI6ImdjMTU2eWtzOVFGSWNYZVc2OFA5SkpuMER4azlEd3V3Iiwic2NvcGUiOiIiLCJwZXJtaXNzaW9ucyI6WyJhZGQ6YWN0b3JzIiwiZGVsZXRlOmFjdG9ycyIsInVwZGF0ZTphY3RvcnMiLCJ1cGRhdGU6bW92aWVzIiwidmlldzphY3RvcnMiLCJ2aWV3Om1vdmllcyJdfQ.RtdDHjhvNoGRgiwVWYA6x22phvJ0QAWkPlwhKbVf5Qq1XndfPY3IKgxEY5HBweqAYOvx2uW06xF37I8kYn4Enw2ajxnOMuCpuPYjDkAFs68JpjyI55CEHvtPxbZB-pX-z5zoxjiUEnQfU6pR5Ww1MAzsf78-ULTDzKdyFQl5bkWRoiEM6GBb6ZzmTsjd0Xkp3oaocAsMrpI8AA1a-W818WrcZfBUhYibASiK8rGZnqsJQ_lsSqL0YLkbL4tkmJBfBYta3cBPHyxCj7R2wPS1SrIijcRpbs_HekqndtEW5_TRdjXA8e6M0s0CQwblAk78p70yV4pDv1pCnoL4-Kki_Q",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Executive Producer",
			"item": [
				{
					"name": "GET/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains movies array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.movies).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"value contains actors array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.actors).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"title\": \"Test Movie\", \"release_year\": \"2023\"}"
						},
						"url": {
							"raw": "{{host}}/movies/add",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Test Actor\", \"gender\": \"Male\", \"age\": \"30\", \"movie_id\": \"4\"}"
						},
						"url": {
							"raw": "{{host}}/actors/add",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH/movies/3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"title\": \"Healer\",\"release_year\": \"2020\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/movies/update/3",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"update",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH/actors/ 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"age\": \"26\"}"
						},
						"url": {
							"raw": "{{host}}/actors/update/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"update",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE/movies/13",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/delete/13",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"delete",
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE/actors/7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/delete/7",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"delete",
								"7"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkdtOXJGLUNjNk1zVjlBRUpUM0tBUyJ9.eyJpc3MiOiJodHRwczovL2FudWphZnNuZC11ZGFjaXR5LnVzLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw2NTEwMDZmMzdmZDQ4YWU0OTEwZTJkOTYiLCJhdWQiOiJDYXN0aW5nQWdlbmN5IiwiaWF0IjoxNjk1NTgwNDA2LCJleHAiOjE2OTU1ODc2MDYsImF6cCI6ImdjMTU2eWtzOVFGSWNYZVc2OFA5SkpuMER4azlEd3V3Iiwic2NvcGUiOiIiLCJwZXJtaXNzaW9ucyI6WyJhZGQ6YWN0b3JzIiwiYWRkOm1vdmllcyIsImRlbGV0ZTphY3RvcnMiLCJkZWxldGU6bW92aWVzIiwidXBkYXRlOmFjdG9ycyIsInVwZGF0ZTptb3ZpZXMiLCJ2aWV3OmFjdG9ycyIsInZpZXc6bW92aWVzIl19.KXWV9peYPVGgrXUUCkvt-6pkTD5_PqxCZXpgOMQYqoCBJCem356zhAKS-PfImrMncAy-5fi7MWXDGBn9lT9TYUBBSoApTFKOMuIKFxagPpXXEpnttvY-aZhCr8rJZXl0gQbbcluJGaWbaeS9kvelpvTacTPoaheRhp0YnLIQz4I5TeOqsMmaXcNVfHQo3QmUXbioIObUhW0f2qolmTsRbhMNaCwq9FRZMbwnJc9U7g_sbioWGwofDeDjY57hUxUDj_syi6O3tsjrF5wEYts5tR7xanSLajFMpQ0hnqsOfO28rqmJV6kPWsRW-Y9avFsNde7lhvXjT6vetPOvFKx_aw",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost:5000",
			"type": "string"
		}
	]
}